{"ast":null,"code":"import _defineProperty from \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, FETCH_QUIZ_RETRY, QUIZ_SET_STATE, QUIZ_FINISHED } from \"../actions/actionTypes\";\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  //\n  results: [],\n  isFinished: false,\n  answerState: null,\n  activeQuestion: 0,\n  quiz: []\n};\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_QUIZES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        quizes: action.quizes\n      });\n\n    case FETCH_QUIZES_ERROR:\n      return _objectSpread({}, state, {\n        error: action.error\n      });\n\n    case FETCH_QUIZ_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        quiz: action.quiz\n      });\n\n    case QUIZ_SET_STATE:\n      return _objectSpread({}, state, {\n        answerState: action.answerState,\n        results: action.results\n      });\n\n    case QUIZ_FINISHED:\n      return _objectSpread({}, state, {\n        isFinished: true\n      });\n\n    case FETCH_QUIZ_RETRY:\n      return _objectSpread({}, state, {\n        results: [],\n        isFinished: false,\n        answerState: null,\n        activeQuestion: 0\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\store\\reducers\\quiz.js"],"names":["FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_RETRY","QUIZ_SET_STATE","QUIZ_FINISHED","initialState","quizes","loading","error","results","isFinished","answerState","activeQuestion","quiz","quizReducer","state","action","type"],"mappings":";;;;;;AAAA,SAAQA,kBAAR,EAA4BC,oBAA5B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,EAA0FC,gBAA1F,EAA4GC,cAA5G,EAA4HC,aAA5H,QAAgJ,wBAAhJ;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAGL;AACfC,EAAAA,OAAO,EAAE,EAJW;AAKpBC,EAAAA,UAAU,EAAE,KALQ;AAMpBC,EAAAA,WAAW,EAAE,IANO;AAOpBC,EAAAA,cAAc,EAAE,CAPI;AAQpBC,EAAAA,IAAI,EAAE;AARc,CAArB;AAWA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGV,YAA7B,EAA2CW,MAA3C,EAAkD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,kBAAL;AAAyB,+BAClBiB,KADkB;AAErBR,QAAAA,OAAO,EAAE;AAFY;;AAIzB,SAAKR,oBAAL;AAA2B,+BACpBgB,KADoB;AAEvBR,QAAAA,OAAO,EAAE,KAFc;AAGvBD,QAAAA,MAAM,EAAEU,MAAM,CAACV;AAHQ;;AAK3B,SAAKN,kBAAL;AAAyB,+BAClBe,KADkB;AAErBP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFO;;AAIzB,SAAKP,kBAAL;AAAyB,+BAClBc,KADkB;AAErBR,QAAAA,OAAO,EAAE,KAFY;AAGrBM,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHQ;;AAKzB,SAAKV,cAAL;AAAqB,+BACdY,KADc;AAEjBJ,QAAAA,WAAW,EAAEK,MAAM,CAACL,WAFH;AAGjBF,QAAAA,OAAO,EAAEO,MAAM,CAACP;AAHC;;AAKrB,SAAKL,aAAL;AAAoB,+BACbW,KADa;AAEhBL,QAAAA,UAAU,EAAE;AAFI;;AAIpB,SAAKR,gBAAL;AAAuB,+BAChBa,KADgB;AAEnBN,QAAAA,OAAO,EAAE,EAFU;AAG5BC,QAAAA,UAAU,EAAE,KAHgB;AAI5BC,QAAAA,WAAW,EAAE,IAJe;AAK5BC,QAAAA,cAAc,EAAE;AALY;;AAOvB;AAAS,aAAOG,KAAP;AAnCb;AAqCH","sourcesContent":["import {FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS, FETCH_QUIZ_RETRY, QUIZ_SET_STATE, QUIZ_FINISHED} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,//\r\n\tresults: [],\r\n\tisFinished: false,\r\n\tanswerState: null,\r\n\tactiveQuestion: 0,\r\n\tquiz: []\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_QUIZES_START: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case FETCH_QUIZES_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            quizes: action.quizes\r\n        }\r\n        case FETCH_QUIZES_ERROR: return {\r\n            ...state,\r\n            error: action.error\r\n        }\r\n        case FETCH_QUIZ_SUCCESS: return{\r\n            ...state,\r\n            loading: false,\r\n            quiz: action.quiz\r\n        }\r\n        case QUIZ_SET_STATE: return{\r\n            ...state,\r\n            answerState: action.answerState,\r\n            results: action.results\r\n        }\r\n        case QUIZ_FINISHED: return{\r\n            ...state,\r\n            isFinished: true\r\n        }\r\n        case FETCH_QUIZ_RETRY: return{\r\n            ...state,\r\n            results: [],\r\n\t\t\tisFinished: false,\r\n\t\t\tanswerState: null,\r\n\t\t\tactiveQuestion: 0\r\n        }\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}