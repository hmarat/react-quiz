{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\src\\\\Containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../Components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuiz, fetchQuizRetry } from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onRetry = () => {\n      this.props.fetchQuizRetry();\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      const question = this.props.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n      if (this.state.answerState) if (this.state.answerState[Object.keys(this.state.answerState)[0]] === \"success\") return;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) results[question.id] = \"success\";\n        this.setState({\n          answerState: {\n            [answerId]: \"success\"\n          },\n          results\n        });\n\n        if (!this.isQuizFinished()) {\n          const timeout = setTimeout(() => {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n            clearTimeout(timeout);\n          }, 1000);\n        } else {\n          this.setState({\n            isFinished: true\n          });\n        }\n      } else {\n        results[question.id] = \"error\";\n        this.setState({\n          answerState: {\n            [answerId]: \"error\"\n          },\n          results\n        });\n      }\n    };\n\n    this.isQuizFinished = () => {\n      return this.props.activeQuestion + 1 === this.props.quiz.length;\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchQuiz(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Quiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.props.loading || this.props.quiz.length === 0 ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }) : this.props.isFinished ? React.createElement(FinishedQuiz, {\n      quiz: this.props.quiz,\n      results: this.props.results,\n      onRetry: this.onRetry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : React.createElement(ActiveQuiz, {\n      answers: this.props.quiz[this.props.activeQuestion].answers,\n      question: this.props.quiz[this.props.activeQuestion].question,\n      rightAnswerId: this.props.quiz[this.props.activeQuestion].rightAnswerId,\n      onAnswerClickHandler: this.onAnswerClickHandler,\n      activeQuestion: this.props.activeQuestion,\n      quizLength: this.props.quiz.length,\n      state: this.props.answerState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    answerState: state.quiz.answerState,\n    activeQuestion: state.quiz.activeQuestion,\n    quiz: state.quiz.quiz\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuiz: id => dispatch(fetchQuiz(id)),\n    fetchQuizRetry: () => dispatch(fetchQuiz())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\Containers\\Quiz\\Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","Loader","connect","fetchQuiz","fetchQuizRetry","Quiz","onRetry","props","onAnswerClickHandler","answerId","question","quiz","state","activeQuestion","results","answerState","Object","keys","rightAnswerId","id","setState","isQuizFinished","timeout","setTimeout","clearTimeout","isFinished","length","componentDidMount","match","params","render","QuizWrapper","loading","answers","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport classes from \"./Quiz.module.css\"\r\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\"\r\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from \"../../Components/UI/Loader/Loader\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchQuiz, fetchQuizRetry} from \"../../store/actions/quiz\"\r\n\r\n\r\nclass Quiz extends Component{\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchQuiz(this.props.match.params.id);\r\n\t}\r\n\t\r\n\tonRetry = () => {\r\n\t\tthis.props.fetchQuizRetry()\r\n\t}\r\n\r\n\tonAnswerClickHandler = answerId =>{\r\n\t\tconst question = this.props.quiz[this.state.activeQuestion];\r\n\t\tconst results = this.state.results;\r\n\t\t\r\n\t\tif(this.state.answerState)\r\n\t\t\tif(this.state.answerState[Object.keys(this.state.answerState)[0]] === \"success\")\r\n\t\t\t\treturn\r\n\t\t\r\n\t\tif(question.rightAnswerId === answerId){\r\n\t\t\tif(!results[question.id])\r\n\t\t\t\tresults[question.id] = \"success\";\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswerState: {[answerId]: \"success\"},\r\n\t\t\t\tresults\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isQuizFinished()){\r\n\t\t\t\tconst timeout = setTimeout(()=>{\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tactiveQuestion: this.state.activeQuestion + 1,\r\n\t\t\t\t\t\tanswerState: null\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.setState({isFinished: true});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tresults[question.id] = \"error\";\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswerState: {[answerId]: \"error\"},\r\n\t\t\t\tresults\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tisQuizFinished = () => {\r\n\t\treturn this.props.activeQuestion + 1 === this.props.quiz.length;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className={classes.Quiz}>\r\n\t\t\t\t<div className={classes.QuizWrapper}>\r\n\t\t\t\t\t<h1>Ответьте на все вопросы</h1>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.props.loading || this.props.quiz.length === 0\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tthis.props.isFinished ?\r\n\t\t\t\t\t\t<FinishedQuiz \r\n\t\t\t\t\t\t\tquiz={this.props.quiz} \r\n\t\t\t\t\t\t\tresults={this.props.results}\r\n\t\t\t\t\t\t\tonRetry={this.onRetry}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<ActiveQuiz \r\n\t\t\t\t\t\t\tanswers={this.props.quiz[this.props.activeQuestion].answers}\r\n\t\t\t\t\t\t\tquestion={this.props.quiz[this.props.activeQuestion].question}\r\n\t\t\t\t\t\t\trightAnswerId={this.props.quiz[this.props.activeQuestion].rightAnswerId}\r\n\t\t\t\t\t\t\tonAnswerClickHandler={this.onAnswerClickHandler}\r\n\t\t\t\t\t\t\tactiveQuestion={this.props.activeQuestion}\r\n\t\t\t\t\t\t\tquizLength={this.props.quiz.length}\r\n\t\t\t\t\t\t\tstate={this.props.answerState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn{\r\n\t\tresults: state.quiz.results,\r\n\t\tisFinished: state.quiz.isFinished,\r\n\t\tanswerState: state.quiz.answerState,\r\n\t\tactiveQuestion: state.quiz.activeQuestion,\r\n\t\tquiz: state.quiz.quiz,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n\treturn{\r\n\t\tfetchQuiz: id => dispatch(fetchQuiz(id)),\r\n\t\tfetchQuizRetry: () => dispatch(fetchQuiz())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)"]},"metadata":{},"sourceType":"module"}