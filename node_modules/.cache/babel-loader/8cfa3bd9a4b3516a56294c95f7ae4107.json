{"ast":null,"code":"import _defineProperty from \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\src\\\\Containers\\\\QuizCreator\\\\QuizCreator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport classes from \"./QuizCreator.module.css\";\nimport Button from \"../../Components/UI/Button/Button\";\nimport Input from \"../../Components/UI/Input/Input\";\nimport Select from \"../../Components/UI/Select/Select\";\nimport { createControl, validateControl, validateForm } from \"../../form/formFramework\";\nimport { connect } from \"react-redux\";\nimport { createQuizQuestion, finishCreateQuiz } from \"../../store/actions/create\";\nimport axios from \"axios\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: \"\\u041E\\u0442\\u0432\\u0435\\u0442 \".concat(number),\n    errorMessage: \"Вопрос не может быть пустым\",\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: \"Введите вопрос\",\n      errorMessage: \"Вопрос не может быть пустым\"\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nclass QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    };\n\n    this.onSubmitHandler = evt => {\n      evt.preventDefault();\n    };\n\n    this.addQuestionHandler = evt => {\n      const _this$state$formContr = this.state.formControls,\n            question = _this$state$formContr.question,\n            option1 = _this$state$formContr.option1,\n            option2 = _this$state$formContr.option2,\n            option3 = _this$state$formContr.option3,\n            option4 = _this$state$formContr.option4;\n      const questionItem = {\n        question: question.value,\n        id: this.props.quiz.length + 1,\n        rightAnswerId: this.state.rightAnswerId,\n        answers: [{\n          text: option1.value,\n          id: option1.id\n        }, {\n          text: option2.value,\n          id: option2.id\n        }, {\n          text: option3.value,\n          id: option3.id\n        }, {\n          text: option4.value,\n          id: option4.id\n        }]\n      };\n      this.props.createQuizQuestion(questionItem);\n      this.setState({\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      });\n    };\n\n    this.createQuizHandler = async evt => {\n      evt.preventDefault(); //await axios.post(\"https://react-quiz-9637e.firebaseio.com/quizes.json\", this.props.quiz)\n\n      this.setState({\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      });\n    };\n\n    this.selectChangeHandler = evt => {\n      this.setState({\n        rightAnswerId: parseInt(evt.target.value)\n      });\n    };\n  }\n\n  changeHandler(value, controlName) {\n    const formControls = _objectSpread({}, this.state.formControls);\n\n    const control = _objectSpread({}, formControls[controlName]);\n\n    control.value = value;\n    control.touched = true;\n    control.valid = validateControl(value, control.validation);\n    formControls[controlName] = control;\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(React.Fragment, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: control.label,\n        errorMessage: control.errorMessage,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        shouldValidate: !!control.validation,\n        onChange: evt => this.changeHandler(evt.target.value, controlName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), index === 0 ? React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }) : null);\n    });\n  }\n\n  render() {\n    const select = React.createElement(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        value: 1,\n        text: 1\n      }, {\n        value: 2,\n        text: 2\n      }, {\n        value: 3,\n        text: 3\n      }, {\n        value: 4,\n        text: 4\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderControls(), select, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      disabled: !this.state.isFormValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), React.createElement(Button, {\n      type: \"success\",\n      onClick: this.createQuizHandler,\n      disabled: this.props.quiz.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    quiz: state.create.quiz\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\Containers\\QuizCreator\\QuizCreator.js"],"names":["React","Component","classes","Button","Input","Select","createControl","validateControl","validateForm","connect","createQuizQuestion","finishCreateQuiz","axios","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","isFormValid","rightAnswerId","formControls","onSubmitHandler","evt","preventDefault","addQuestionHandler","questionItem","value","props","quiz","length","answers","text","setState","createQuizHandler","selectChangeHandler","parseInt","target","changeHandler","controlName","control","touched","valid","validation","renderControls","Object","keys","map","index","render","select","mapStateToProps","create","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport classes from \"./QuizCreator.module.css\"\r\nimport Button from \"../../Components/UI/Button/Button\"\r\nimport Input from \"../../Components/UI/Input/Input\"\r\nimport Select from \"../../Components/UI/Select/Select\"\r\nimport { createControl, validateControl, validateForm } from \"../../form/formFramework\"\r\nimport { connect } from \"react-redux\"\r\nimport { createQuizQuestion, finishCreateQuiz } from \"../../store/actions/create\"\r\nimport axios from \"axios\"\r\n\r\nfunction createOptionControl(number) {\r\n\treturn createControl({\r\n\t\tlabel: `Ответ ${number}`,\r\n\t\terrorMessage: \"Вопрос не может быть пустым\",\r\n\t\tid: number\r\n\t},\r\n\t\t{ required: true });\r\n}\r\n\r\nfunction createFormControls() {\r\n\treturn (\r\n\t\t{\r\n\t\t\tquestion: createControl({\r\n\t\t\t\tlabel: \"Введите вопрос\",\r\n\t\t\t\terrorMessage: \"Вопрос не может быть пустым\"\r\n\t\t\t},\r\n\t\t\t\t{ required: true }),\r\n\t\t\toption1: createOptionControl(1),\r\n\t\t\toption2: createOptionControl(2),\r\n\t\t\toption3: createOptionControl(3),\r\n\t\t\toption4: createOptionControl(4)\r\n\t\t}\r\n\t)\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\tstate = {\r\n\t\tisFormValid: false,\r\n\t\trightAnswerId: 1,\r\n\t\tformControls: createFormControls()\r\n\t}\r\n\r\n\tonSubmitHandler = evt => {\r\n\t\tevt.preventDefault();\r\n\t}\r\n\r\n\taddQuestionHandler = evt => {\r\n\t\tconst { question, option1, option2, option3, option4 } = this.state.formControls;\r\n\r\n\t\tconst questionItem = {\r\n\t\t\tquestion: question.value,\r\n\t\t\tid: this.props.quiz.length + 1,\r\n\t\t\trightAnswerId: this.state.rightAnswerId,\r\n\t\t\tanswers: [\r\n\t\t\t\t{ text: option1.value, id: option1.id },\r\n\t\t\t\t{ text: option2.value, id: option2.id },\r\n\t\t\t\t{ text: option3.value, id: option3.id },\r\n\t\t\t\t{ text: option4.value, id: option4.id }\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tthis.props.createQuizQuestion(questionItem);\r\n\r\n\t\tthis.setState({\r\n\t\t\tisFormValid: false,\r\n\t\t\trightAnswerId: 1,\r\n\t\t\tformControls: createFormControls()\r\n\t\t});\r\n\t}\r\n\r\n\tcreateQuizHandler = async evt => {\r\n\t\tevt.preventDefault();\r\n\t\t//await axios.post(\"https://react-quiz-9637e.firebaseio.com/quizes.json\", this.props.quiz)\r\n\t\tthis.setState({\r\n\t\t\tisFormValid: false,\r\n\t\t\trightAnswerId: 1,\r\n\t\t\tformControls: createFormControls()\r\n\t\t})\r\n\t}\r\n\r\n\tchangeHandler(value, controlName) {\r\n\t\tconst formControls = { ...this.state.formControls };\r\n\t\tconst control = { ...formControls[controlName] };\r\n\r\n\t\tcontrol.value = value;\r\n\t\tcontrol.touched = true;\r\n\t\tcontrol.valid = validateControl(value, control.validation);\r\n\r\n\t\tformControls[controlName] = control;\r\n\r\n\t\tthis.setState({\r\n\t\t\tformControls,\r\n\t\t\tisFormValid: validateForm(formControls)\r\n\t\t})\r\n\t}\r\n\r\n\trenderControls() {\r\n\t\treturn Object.keys(this.state.formControls).map((controlName, index) => {\r\n\t\t\tconst control = this.state.formControls[controlName];\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tlabel={control.label}\r\n\t\t\t\t\t\terrorMessage={control.errorMessage}\r\n\t\t\t\t\t\tvalue={control.value}\r\n\t\t\t\t\t\tvalid={control.valid}\r\n\t\t\t\t\t\ttouched={control.touched}\r\n\t\t\t\t\t\tshouldValidate={!!control.validation}\r\n\t\t\t\t\t\tonChange={evt => this.changeHandler(evt.target.value, controlName)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{index === 0 ? <hr /> : null}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tselectChangeHandler = evt => {\r\n\t\tthis.setState({ rightAnswerId: parseInt(evt.target.value) })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst select = <Select\r\n\t\t\tlabel=\"Выберите правильный ответ\"\r\n\t\t\tvalue={this.state.rightAnswerId}\r\n\t\t\tonChange={this.selectChangeHandler}\r\n\t\t\toptions={[\r\n\t\t\t\t{ value: 1, text: 1 },\r\n\t\t\t\t{ value: 2, text: 2 },\r\n\t\t\t\t{ value: 3, text: 3 },\r\n\t\t\t\t{ value: 4, text: 4 }\r\n\t\t\t]}\r\n\t\t/>\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.QuizCreator}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Создание Тестов</h1>\r\n\t\t\t\t\t<form onSubmit={this.onSubmitHandler}>\r\n\t\t\t\t\t\t{this.renderControls()}\r\n\t\t\t\t\t\t{select}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tonClick={this.addQuestionHandler}\r\n\t\t\t\t\t\t\tdisabled={!this.state.isFormValid}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tДобавить вопрос\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"success\"\r\n\t\t\t\t\t\t\tonClick={this.createQuizHandler}\r\n\t\t\t\t\t\t\tdisabled={this.props.quiz.length === 0}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tСоздать тест\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tquiz: state.create.quiz\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n\t\tfinishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)"]},"metadata":{},"sourceType":"module"}