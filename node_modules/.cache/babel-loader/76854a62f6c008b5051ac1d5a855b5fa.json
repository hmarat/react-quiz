{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\src\\\\Containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../Components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuiz } from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onRetry = () => {\n      this.setState({\n        results: [],\n        isFinished: false,\n        answerState: null,\n        activeQuestion: 0\n      });\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n      if (this.state.answerState) if (this.state.answerState[Object.keys(this.state.answerState)[0]] === \"success\") return;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) results[question.id] = \"success\";\n        this.setState({\n          answerState: {\n            [answerId]: \"success\"\n          },\n          results\n        });\n\n        if (!this.isQuizFinished()) {\n          const timeout = setTimeout(() => {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n            clearTimeout(timeout);\n          }, 1000);\n        } else {\n          this.setState({\n            isFinished: true\n          });\n        }\n      } else {\n        results[question.id] = \"error\";\n        this.setState({\n          answerState: {\n            [answerId]: \"error\"\n          },\n          results\n        });\n      }\n    };\n\n    this.isQuizFinished = () => {\n      return this.state.activeQuestion + 1 === this.state.quiz.length;\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.props.fetchQuiz(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Quiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.props.loading || this.props.quiz ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : this.props.isFinished ? React.createElement(FinishedQuiz, {\n      quiz: this.props.quiz,\n      results: this.props.results,\n      onRetry: this.onRetry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : React.createElement(ActiveQuiz, {\n      answers: this.props.quiz[this.props.activeQuestion].answers,\n      question: this.props.quiz[this.props.activeQuestion].question,\n      rightAnswerId: this.props.quiz[this.props.activeQuestion].rightAnswerId,\n      onAnswerClickHandler: this.onAnswerClickHandler,\n      activeQuestion: this.props.activeQuestion,\n      quizLength: this.props.quiz.length,\n      state: this.props.answerState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    answerState: state.quiz.answerState,\n    activeQuestion: state.quiz.activeQuestion,\n    quiz: state.quiz.quiz\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuiz: id => dispatch(fetchQuiz(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\Containers\\Quiz\\Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","Loader","connect","fetchQuiz","Quiz","onRetry","setState","results","isFinished","answerState","activeQuestion","onAnswerClickHandler","answerId","question","state","quiz","Object","keys","rightAnswerId","id","isQuizFinished","timeout","setTimeout","clearTimeout","length","componentDidMount","console","log","props","match","params","render","QuizWrapper","loading","answers","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport classes from \"./Quiz.module.css\"\r\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\"\r\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from \"../../Components/UI/Loader/Loader\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchQuiz} from \"../../store/actions/quiz\"\r\n\r\n\r\nclass Quiz extends Component{\r\n\r\n\tcomponentDidMount(){console.log(this.props.match.params.id)\r\n\t\tthis.props.fetchQuiz(this.props.match.params.id);\r\n\t}\r\n\t\r\n\tonRetry = () => {\r\n\t\tthis.setState({\r\n\t\t\tresults: [],\r\n\t\t\tisFinished: false,\r\n\t\t\tanswerState: null,\r\n\t\t\tactiveQuestion: 0\r\n\t\t});\r\n\t}\r\n\r\n\tonAnswerClickHandler = answerId =>{\r\n\t\tconst question = this.state.quiz[this.state.activeQuestion];\r\n\t\tconst results = this.state.results;\r\n\t\t\r\n\t\tif(this.state.answerState)\r\n\t\t\tif(this.state.answerState[Object.keys(this.state.answerState)[0]] === \"success\")\r\n\t\t\t\treturn\r\n\t\t\r\n\t\tif(question.rightAnswerId === answerId){\r\n\t\t\tif(!results[question.id])\r\n\t\t\t\tresults[question.id] = \"success\";\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswerState: {[answerId]: \"success\"},\r\n\t\t\t\tresults\r\n\t\t\t});\r\n\r\n\t\t\tif(!this.isQuizFinished()){\r\n\t\t\t\tconst timeout = setTimeout(()=>{\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tactiveQuestion: this.state.activeQuestion + 1,\r\n\t\t\t\t\t\tanswerState: null\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.setState({isFinished: true});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tresults[question.id] = \"error\";\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswerState: {[answerId]: \"error\"},\r\n\t\t\t\tresults\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tisQuizFinished = () => {\r\n\t\treturn this.state.activeQuestion + 1 === this.state.quiz.length;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className={classes.Quiz}>\r\n\t\t\t\t<div className={classes.QuizWrapper}>\r\n\t\t\t\t\t<h1>Ответьте на все вопросы</h1>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.props.loading || this.props.quiz\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tthis.props.isFinished ?\r\n\t\t\t\t\t\t<FinishedQuiz \r\n\t\t\t\t\t\t\tquiz={this.props.quiz} \r\n\t\t\t\t\t\t\tresults={this.props.results}\r\n\t\t\t\t\t\t\tonRetry={this.onRetry}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<ActiveQuiz \r\n\t\t\t\t\t\t\tanswers={this.props.quiz[this.props.activeQuestion].answers}\r\n\t\t\t\t\t\t\tquestion={this.props.quiz[this.props.activeQuestion].question}\r\n\t\t\t\t\t\t\trightAnswerId={this.props.quiz[this.props.activeQuestion].rightAnswerId}\r\n\t\t\t\t\t\t\tonAnswerClickHandler={this.onAnswerClickHandler}\r\n\t\t\t\t\t\t\tactiveQuestion={this.props.activeQuestion}\r\n\t\t\t\t\t\t\tquizLength={this.props.quiz.length}\r\n\t\t\t\t\t\t\tstate={this.props.answerState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn{\r\n\t\tresults: state.quiz.results,\r\n\t\tisFinished: state.quiz.isFinished,\r\n\t\tanswerState: state.quiz.answerState,\r\n\t\tactiveQuestion: state.quiz.activeQuestion,\r\n\t\tquiz: state.quiz.quiz,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n\treturn{\r\n\t\tfetchQuiz: id => dispatch(fetchQuiz(id))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)"]},"metadata":{},"sourceType":"module"}