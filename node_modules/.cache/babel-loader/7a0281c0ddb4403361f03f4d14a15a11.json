{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\src\\\\Containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../Components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuiz, quizAnswerClick, fetchQuizRetry } from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onRetry = () => {\n      this.props.fetchQuizRetry();\n    };\n\n    this.isQuizFinished = () => {\n      return this.props.activeQuestion + 1 === this.props.quiz.length;\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchQuiz(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.Quiz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.props.loading || this.props.quiz.length === 0 ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : this.props.isFinished ? React.createElement(FinishedQuiz, {\n      quiz: this.props.quiz,\n      results: this.props.results,\n      onRetry: this.onRetry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : React.createElement(ActiveQuiz, {\n      answers: this.props.quiz[this.props.activeQuestion].answers,\n      question: this.props.quiz[this.props.activeQuestion].question,\n      rightAnswerId: this.props.quiz[this.props.activeQuestion].rightAnswerId,\n      onAnswerClickHandler: this.props.quizAnswerClick,\n      activeQuestion: this.props.activeQuestion,\n      quizLength: this.props.quiz.length,\n      state: this.props.answerState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    answerState: state.quiz.answerState,\n    activeQuestion: state.quiz.activeQuestion,\n    quiz: state.quiz.quiz\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuiz: id => dispatch(fetchQuiz(id)),\n    fetchQuizRetry: () => dispatch(fetchQuiz()),\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\Containers\\Quiz\\Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","Loader","connect","fetchQuiz","quizAnswerClick","fetchQuizRetry","Quiz","onRetry","props","isQuizFinished","activeQuestion","quiz","length","componentDidMount","match","params","id","render","QuizWrapper","loading","isFinished","results","answers","question","rightAnswerId","answerState","mapStateToProps","state","mapDispatchToProps","dispatch","answerId"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport classes from \"./Quiz.module.css\"\r\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\"\r\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from \"../../Components/UI/Loader/Loader\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchQuiz, quizAnswerClick, fetchQuizRetry} from \"../../store/actions/quiz\"\r\n\r\n\r\nclass Quiz extends Component{\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchQuiz(this.props.match.params.id);\r\n\t}\r\n\t\r\n\tonRetry = () => {\r\n\t\tthis.props.fetchQuizRetry()\r\n\t}\r\n\r\n\tisQuizFinished = () => {\r\n\t\treturn this.props.activeQuestion + 1 === this.props.quiz.length;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className={classes.Quiz}>\r\n\t\t\t\t<div className={classes.QuizWrapper}>\r\n\t\t\t\t\t<h1>Ответьте на все вопросы</h1>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\tthis.props.loading || this.props.quiz.length === 0\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tthis.props.isFinished ?\r\n\t\t\t\t\t\t<FinishedQuiz \r\n\t\t\t\t\t\t\tquiz={this.props.quiz} \r\n\t\t\t\t\t\t\tresults={this.props.results}\r\n\t\t\t\t\t\t\tonRetry={this.onRetry}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<ActiveQuiz \r\n\t\t\t\t\t\t\tanswers={this.props.quiz[this.props.activeQuestion].answers}\r\n\t\t\t\t\t\t\tquestion={this.props.quiz[this.props.activeQuestion].question}\r\n\t\t\t\t\t\t\trightAnswerId={this.props.quiz[this.props.activeQuestion].rightAnswerId}\r\n\t\t\t\t\t\t\tonAnswerClickHandler={this.props.quizAnswerClick}\r\n\t\t\t\t\t\t\tactiveQuestion={this.props.activeQuestion}\r\n\t\t\t\t\t\t\tquizLength={this.props.quiz.length}\r\n\t\t\t\t\t\t\tstate={this.props.answerState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn{\r\n\t\tresults: state.quiz.results,\r\n\t\tisFinished: state.quiz.isFinished,\r\n\t\tanswerState: state.quiz.answerState,\r\n\t\tactiveQuestion: state.quiz.activeQuestion,\r\n\t\tquiz: state.quiz.quiz,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n\treturn{\r\n\t\tfetchQuiz: id => dispatch(fetchQuiz(id)),\r\n\t\tfetchQuizRetry: () => dispatch(fetchQuiz()),\r\n\t\tquizAnswerClick: answerId => dispatch(quizAnswerClick(answerId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)"]},"metadata":{},"sourceType":"module"}