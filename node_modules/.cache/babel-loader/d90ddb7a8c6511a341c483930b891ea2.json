{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Felix\\\\Desktop\\\\React\\\\react-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Felix\\\\Desktop\\\\React\\\\react-quiz\\\\src\\\\Containers\\\\QuizCreator\\\\QuizCreator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport classes from \"./QuizCreator.module.css\";\nimport Button from \"../../Components/UI/Button/Button\";\nimport Input from \"../../Components/UI/Input/Input\";\nimport Select from \"../../Components/UI/Select/Select\";\nimport { createControl, validateControl, validateForm } from \"../../form/formFramework\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: \"\\u041E\\u0442\\u0432\\u0435\\u0442 \".concat(number),\n    errorMessage: \"Вопрос не может быть пустым\"\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: \"Введите вопрос\",\n      errorMessage: \"Вопрос не может быть пустым\"\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nclass QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      rightAnswerId: 1,\n      quiz: [],\n      formControls: createFormControls()\n    };\n\n    this.onSubmitHandler = evt => {\n      evt.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.selectChangeHandler = evt => {\n      this.setState({\n        rightAnswerId: evt.target.value\n      });\n    };\n  }\n\n  ChangeHandler(value, controlName) {\n    const formControls = _objectSpread({}, this.state.formControls);\n\n    const control = _objectSpread({}, formControls[controlName]);\n\n    control.value = value;\n    control.touched = true;\n    control.valid = validateControl(value, control.validation);\n    formControls[controlName] = control;\n    this.setState({\n      formControls\n    });\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: index,\n        label: control.label,\n        errorMessage: control.errorMessage,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        shouldValidate: !!control.validation,\n        onChange: evt => this.changeHandler(evt.target.value, controlName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), index === 0 ? React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : null);\n    });\n  }\n\n  render() {\n    const select = React.createElement(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        value: 1,\n        text: 1\n      }, {\n        value: 2,\n        text: 2\n      }, {\n        value: 3,\n        text: 3\n      }, {\n        value: 4,\n        text: 4\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.renderControls(), select, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), React.createElement(Button, {\n      type: \"success\",\n      onClick: this.createQuizHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}\n\nexport default QuizCreator;","map":{"version":3,"sources":["C:\\Users\\Felix\\Desktop\\React\\react-quiz\\src\\Containers\\QuizCreator\\QuizCreator.js"],"names":["React","Component","classes","Button","Input","Select","createControl","validateControl","validateForm","createOptionControl","number","label","errorMessage","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","isFormValid","rightAnswerId","quiz","formControls","onSubmitHandler","evt","preventDefault","addQuestionHandler","createQuizHandler","selectChangeHandler","setState","target","value","ChangeHandler","controlName","control","touched","valid","validation","renderControls","Object","keys","map","index","changeHandler","render","select","text"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAAQC,aAAR,EAAuBC,eAAvB,EAAwCC,YAAxC,QAA2D,0BAA3D;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAoC;AACnC,SAAOJ,aAAa,CAAC;AACpBK,IAAAA,KAAK,2CAAWD,MAAX,CADe;AAEpBE,IAAAA,YAAY,EAAE;AAFM,GAAD,EAIpB;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAJoB,CAApB;AAKA;;AAED,SAASC,kBAAT,GAA6B;AAC5B,SACC;AACCC,IAAAA,QAAQ,EAAET,aAAa,CAAC;AACvBK,MAAAA,KAAK,EAAE,gBADgB;AAEvBC,MAAAA,YAAY,EAAE;AAFS,KAAD,EAIvB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAJuB,CADxB;AAMCG,IAAAA,OAAO,EAAEP,mBAAmB,CAAC,CAAD,CAN7B;AAOCQ,IAAAA,OAAO,EAAER,mBAAmB,CAAC,CAAD,CAP7B;AAQCS,IAAAA,OAAO,EAAET,mBAAmB,CAAC,CAAD,CAR7B;AASCU,IAAAA,OAAO,EAAEV,mBAAmB,CAAC,CAAD;AAT7B,GADD;AAaA;;AAED,MAAMW,WAAN,SAA0BnB,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAClCoB,KADkC,GAC1B;AACPC,MAAAA,WAAW,EAAE,KADN;AAEPC,MAAAA,aAAa,EAAE,CAFR;AAGPC,MAAAA,IAAI,EAAE,EAHC;AAIPC,MAAAA,YAAY,EAAEX,kBAAkB;AAJzB,KAD0B;;AAAA,SAQlCY,eARkC,GAQhBC,GAAG,IAAG;AACvBA,MAAAA,GAAG,CAACC,cAAJ;AACA,KAViC;;AAAA,SAYlCC,kBAZkC,GAYb,MAAK,CAEzB,CAdiC;;AAAA,SAgBlCC,iBAhBkC,GAgBd,MAAK,CAExB,CAlBiC;;AAAA,SAuDlCC,mBAvDkC,GAuDZJ,GAAG,IAAG;AAC3B,WAAKK,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEI,GAAG,CAACM,MAAJ,CAAWC;AAA3B,OAAd;AACA,KAzDiC;AAAA;;AAoBlCC,EAAAA,aAAa,CAACD,KAAD,EAAQE,WAAR,EAAoB;AAChC,UAAMX,YAAY,qBAAO,KAAKJ,KAAL,CAAWI,YAAlB,CAAlB;;AACA,UAAMY,OAAO,qBAAOZ,YAAY,CAACW,WAAD,CAAnB,CAAb;;AAEAC,IAAAA,OAAO,CAACH,KAAR,GAAgBA,KAAhB;AACAG,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAlB;AACAD,IAAAA,OAAO,CAACE,KAAR,GAAgBhC,eAAe,CAAC2B,KAAD,EAAQG,OAAO,CAACG,UAAhB,CAA/B;AAEAf,IAAAA,YAAY,CAACW,WAAD,CAAZ,GAA4BC,OAA5B;AAEA,SAAKL,QAAL,CAAc;AAACP,MAAAA;AAAD,KAAd;AACA;;AAEDgB,EAAAA,cAAc,GAAE;AACf,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKtB,KAAL,CAAWI,YAAvB,EAAqCmB,GAArC,CAAyC,CAACR,WAAD,EAAcS,KAAd,KAAuB;AACtE,YAAMR,OAAO,GAAG,KAAKhB,KAAL,CAAWI,YAAX,CAAwBW,WAAxB,CAAhB;AAEA,aACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,GAAG,EAAES,KADN;AAEC,QAAA,KAAK,EAAER,OAAO,CAAC1B,KAFhB;AAGC,QAAA,YAAY,EAAE0B,OAAO,CAACzB,YAHvB;AAIC,QAAA,KAAK,EAAEyB,OAAO,CAACH,KAJhB;AAKC,QAAA,KAAK,EAAEG,OAAO,CAACE,KALhB;AAMC,QAAA,OAAO,EAAEF,OAAO,CAACC,OANlB;AAOC,QAAA,cAAc,EAAE,CAAC,CAACD,OAAO,CAACG,UAP3B;AAQC,QAAA,QAAQ,EAAEb,GAAG,IAAI,KAAKmB,aAAL,CAAmBnB,GAAG,CAACM,MAAJ,CAAWC,KAA9B,EAAqCE,WAArC,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAWES,KAAK,KAAK,CAAV,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,GAAsB,IAXxB,CADD;AAeA,KAlBM,CAAP;AAmBA;;AAMDE,EAAAA,MAAM,GAAE;AACP,UAAMC,MAAM,GAAG,oBAAC,MAAD;AACd,MAAA,KAAK,EAAC,8IADQ;AAEd,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWE,aAFJ;AAGd,MAAA,QAAQ,EAAE,KAAKQ,mBAHD;AAId,MAAA,OAAO,EAAE,CACR;AAACG,QAAAA,KAAK,EAAE,CAAR;AAAWe,QAAAA,IAAI,EAAE;AAAjB,OADQ,EAER;AAACf,QAAAA,KAAK,EAAE,CAAR;AAAWe,QAAAA,IAAI,EAAE;AAAjB,OAFQ,EAGR;AAACf,QAAAA,KAAK,EAAE,CAAR;AAAWe,QAAAA,IAAI,EAAE;AAAjB,OAHQ,EAIR;AAACf,QAAAA,KAAK,EAAE,CAAR;AAAWe,QAAAA,IAAI,EAAE;AAAjB,OAJQ,CAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAYA,WACC;AAAK,MAAA,SAAS,EAAE/C,OAAO,CAACkB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADD,EAEC;AAAM,MAAA,QAAQ,EAAE,KAAKM,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKe,cAAL,EADF,EAEEO,MAFF,EAGC,oBAAC,MAAD;AACC,MAAA,IAAI,EAAC,SADN;AAEC,MAAA,OAAO,EAAE,KAAKnB,kBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAHD,EASC,oBAAC,MAAD;AACC,MAAA,IAAI,EAAC,SADN;AAEC,MAAA,OAAO,EAAE,KAAKC,iBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EATD,CAFD,CADD,CADD;AAuBA;;AA/FiC;;AAkGnC,eAAeV,WAAf","sourcesContent":["import React, {Component} from \"react\"\r\nimport classes from \"./QuizCreator.module.css\"\r\nimport Button from \"../../Components/UI/Button/Button\"\r\nimport Input from \"../../Components/UI/Input/Input\"\r\nimport Select from \"../../Components/UI/Select/Select\"\r\nimport {createControl, validateControl, validateForm} from \"../../form/formFramework\"\r\n\r\nfunction createOptionControl(number){\r\n\treturn createControl({\r\n\t\tlabel: `Ответ ${number}`,\r\n\t\terrorMessage: \"Вопрос не может быть пустым\"\r\n\t},\r\n\t{required: true});\r\n}\r\n\r\nfunction createFormControls(){\r\n\treturn(\r\n\t\t{\r\n\t\t\tquestion: createControl({\r\n\t\t\t\tlabel: \"Введите вопрос\",\r\n\t\t\t\terrorMessage: \"Вопрос не может быть пустым\"\r\n\t\t\t}, \r\n\t\t\t{required: true}),\r\n\t\t\toption1: createOptionControl(1),\r\n\t\t\toption2: createOptionControl(2),\r\n\t\t\toption3: createOptionControl(3),\r\n\t\t\toption4: createOptionControl(4)\r\n\t\t}\r\n\t)\r\n}\r\n\r\nclass QuizCreator extends Component{\r\n\tstate = {\r\n\t\tisFormValid: false,\r\n\t\trightAnswerId: 1,\r\n\t\tquiz: [],\r\n\t\tformControls: createFormControls()\r\n\t}\r\n\r\n\tonSubmitHandler = evt =>{\r\n\t\tevt.preventDefault();\r\n\t}\r\n\r\n\taddQuestionHandler = () =>{\r\n\r\n\t}\r\n\r\n\tcreateQuizHandler = () =>{\r\n\r\n\t}\t\r\n\r\n\tChangeHandler(value, controlName){\r\n\t\tconst formControls = {...this.state.formControls};\r\n\t\tconst control = {...formControls[controlName]};\r\n\r\n\t\tcontrol.value = value;\r\n\t\tcontrol.touched = true;\r\n\t\tcontrol.valid = validateControl(value, control.validation);\r\n\r\n\t\tformControls[controlName] = control;\r\n\r\n\t\tthis.setState({formControls})\r\n\t}\r\n\r\n\trenderControls(){\r\n\t\treturn Object.keys(this.state.formControls).map((controlName, index) =>{\r\n\t\t\tconst control = this.state.formControls[controlName];\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tlabel={control.label}\r\n\t\t\t\t\t\terrorMessage={control.errorMessage}\r\n\t\t\t\t\t\tvalue={control.value}\r\n\t\t\t\t\t\tvalid={control.valid}\r\n\t\t\t\t\t\ttouched={control.touched}\r\n\t\t\t\t\t\tshouldValidate={!!control.validation}\r\n\t\t\t\t\t\tonChange={evt => this.changeHandler(evt.target.value, controlName)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{index === 0 ? <hr/> : null}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tselectChangeHandler = evt =>{\r\n\t\tthis.setState({rightAnswerId: evt.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst select = <Select\r\n\t\t\tlabel=\"Выберите правильный ответ\"\r\n\t\t\tvalue={this.state.rightAnswerId}\r\n\t\t\tonChange={this.selectChangeHandler}\r\n\t\t\toptions={[\r\n\t\t\t\t{value: 1, text: 1},\r\n\t\t\t\t{value: 2, text: 2},\r\n\t\t\t\t{value: 3, text: 3},\r\n\t\t\t\t{value: 4, text: 4}\r\n\t\t\t]}\r\n\t\t/>\r\n\r\n\t\treturn(\r\n\t\t\t<div className={classes.QuizCreator}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Создание Тестов</h1>\r\n\t\t\t\t\t<form onSubmit={this.onSubmitHandler}>\r\n\t\t\t\t\t\t{this.renderControls()}\r\n\t\t\t\t\t\t{select}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\tonClick={this.addQuestionHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tДобавить вопрос\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"success\"\r\n\t\t\t\t\t\t\tonClick={this.createQuizHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tСоздать тест\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default QuizCreator"]},"metadata":{},"sourceType":"module"}