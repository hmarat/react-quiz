{"ast":null,"code":"import _defineProperty from \"D:\\\\Desktop\\\\React\\\\react-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS } from \"../actions/actionTypes\";\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  //\n  results: [],\n  isFinished: false,\n  answerState: null,\n  activeQuestion: 0,\n  quiz: []\n};\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_QUIZES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        quizes: action.quizes\n      });\n\n    case FETCH_QUIZES_ERROR:\n      return _objectSpread({}, state, {\n        error: action.error\n      });\n\n    case FETCH_QUIZ_SUCCESS:\n      console.log(\"Done reducer\");\n      return _objectSpread({}, state, {\n        loading: false,\n        quiz: action.quiz\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\store\\reducers\\quiz.js"],"names":["FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","initialState","quizes","loading","error","results","isFinished","answerState","activeQuestion","quiz","quizReducer","state","action","type","console","log"],"mappings":";;;;;;AAAA,SAAQA,kBAAR,EAA4BC,oBAA5B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAA+F,wBAA/F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAGL;AACfC,EAAAA,OAAO,EAAE,EAJW;AAKpBC,EAAAA,UAAU,EAAE,KALQ;AAMpBC,EAAAA,WAAW,EAAE,IANO;AAOpBC,EAAAA,cAAc,EAAE,CAPI;AAQpBC,EAAAA,IAAI,EAAE;AARc,CAArB;AAWA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGV,YAA7B,EAA2CW,MAA3C,EAAkD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhB,kBAAL;AAAyB,+BAClBc,KADkB;AAErBR,QAAAA,OAAO,EAAE;AAFY;;AAIzB,SAAKL,oBAAL;AAA2B,+BACpBa,KADoB;AAEvBR,QAAAA,OAAO,EAAE,KAFc;AAGvBD,QAAAA,MAAM,EAAEU,MAAM,CAACV;AAHQ;;AAK3B,SAAKH,kBAAL;AAAyB,+BAClBY,KADkB;AAErBP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFO;;AAIzB,SAAKJ,kBAAL;AAAwBc,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA6B,+BAC9CJ,KAD8C;AAEjDR,QAAAA,OAAO,EAAE,KAFwC;AAGjDM,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHoC;;AAKrD;AAAS,aAAOE,KAAP;AAnBb;AAqBH","sourcesContent":["import {FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,//\r\n\tresults: [],\r\n\tisFinished: false,\r\n\tanswerState: null,\r\n\tactiveQuestion: 0,\r\n\tquiz: []\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_QUIZES_START: return {\r\n            ...state,\r\n            loading: true\r\n        }\r\n        case FETCH_QUIZES_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            quizes: action.quizes\r\n        }\r\n        case FETCH_QUIZES_ERROR: return {\r\n            ...state,\r\n            error: action.error\r\n        }\r\n        case FETCH_QUIZ_SUCCESS:console.log(\"Done reducer\"); return{\r\n            ...state,\r\n            loading: false,\r\n            quiz: action.quiz\r\n        }\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}