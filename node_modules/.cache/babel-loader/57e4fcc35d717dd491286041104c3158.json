{"ast":null,"code":"import axios from \"axios\";\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from \"./actionTypes\";\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCR6XVI_5wH5fn4NcjA63kVMFqZsZcityE\";\n    if (!isLogin) url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCR6XVI_5wH5fn4NcjA63kVMFqZsZcityE\";\n    const response = await axios.post(url, authData);\n    const data = response.data;\n    const expiration = new Date(new Date().getTime() + data.expiresIn * 1000);\n    localStorage.setItem(\"token\", data.idToken);\n    localStorage.setItem(\"userId\", data.localId);\n    localStorage.setItem(\"expirationDate\", expiration);\n    dispatch(authSuccess(data.idToken));\n    autoLogout(data.expiresIn);\n  };\n}\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}\nexport function autoLogin() {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {}\n  };\n}\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => dispatch(logout), time * 1000);\n  };\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: AUTH_LOGOUT\n  };\n}","map":{"version":3,"sources":["D:\\Desktop\\React\\react-quiz\\src\\store\\actions\\auth.js"],"names":["axios","AUTH_SUCCESS","AUTH_LOGOUT","auth","email","password","isLogin","dispatch","authData","returnSecureToken","url","response","post","data","expiration","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","authSuccess","autoLogout","token","type","autoLogin","getItem","logout","time","setTimeout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC3C,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,QAAQ,GAAG;AACbJ,MAAAA,KADa;AAEbC,MAAAA,QAFa;AAGbI,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAMA,QAAIC,GAAG,GAAG,mHAAV;AAEA,QAAI,CAACJ,OAAL,EACII,GAAG,GAAG,uGAAN;AAEJ,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAWF,GAAX,EAAgBF,QAAhB,CAAvB;AACA,UAAMK,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AAEA,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuBH,IAAI,CAACI,SAAL,GAAiB,IAAjD,CAAnB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,OAAnC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BN,IAAI,CAACQ,OAApC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCL,UAAvC;AAEAP,IAAAA,QAAQ,CAACe,WAAW,CAACT,IAAI,CAACO,OAAN,CAAZ,CAAR;AACAG,IAAAA,UAAU,CAACV,IAAI,CAACI,SAAN,CAAV;AACH,GAvBD;AAwBH;AAED,OAAO,SAASK,WAAT,CAAqBE,KAArB,EAA4B;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAExB,YADH;AAEHuB,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,SAAT,GAAqB;AACxB,SAAOnB,QAAQ,IAAI;AACf,UAAMiB,KAAK,GAAGN,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACH,KAAL,EAAY;AACRjB,MAAAA,QAAQ,CAACqB,MAAM,EAAP,CAAR;AACH,KAFD,MAGK,CAEJ;AACJ,GARD;AASH;AAED,OAAO,SAASL,UAAT,CAAoBM,IAApB,EAA0B;AAC7B,SAAOtB,QAAQ,IAAI;AACfuB,IAAAA,UAAU,CAAC,MAAMvB,QAAQ,CAACqB,MAAD,CAAf,EAAyBC,IAAI,GAAG,IAAhC,CAAV;AACH,GAFD;AAGH;AAED,OAAO,SAASD,MAAT,GAAkB;AACrBV,EAAAA,YAAY,CAACa,UAAb,CAAwB,OAAxB;AACAb,EAAAA,YAAY,CAACa,UAAb,CAAwB,QAAxB;AACAb,EAAAA,YAAY,CAACa,UAAb,CAAwB,gBAAxB;AACA,SAAO;AACHN,IAAAA,IAAI,EAAEvB;AADH,GAAP;AAGH","sourcesContent":["import axios from \"axios\"\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from \"./actionTypes\"\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCR6XVI_5wH5fn4NcjA63kVMFqZsZcityE\"\r\n\r\n        if (!isLogin)\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCR6XVI_5wH5fn4NcjA63kVMFqZsZcityE\"\r\n\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n\r\n        const expiration = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem(\"token\", data.idToken);\r\n        localStorage.setItem(\"userId\", data.localId);\r\n        localStorage.setItem(\"expirationDate\", expiration);\r\n\r\n        dispatch(authSuccess(data.idToken));\r\n        autoLogout(data.expiresIn);\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            dispatch(logout())\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => dispatch(logout), time * 1000);\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"expirationDate\");\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}